/*3.052rem/48.83px	A Visual Type Scale
2.441rem/39.06px	A Visual Type Scale
1.953rem/31.25px	A Visual Type Scale
1.563rem/25.00px	A Visual Type Scale
1.25rem/20.00px	A Visual Type Scale
1rem/16.00px	A Visual Type Scale
0.8rem/12.80px	A Visual Type Scale
0.64rem/10.24px	A Visual Type Scale
0.512rem/8.19px	A Visual Type Scale
0.41rem/6.55px	A Visual Type Scale
0.328rem/5.24px	A Visual Type Scale
*/

$red: rgb(250, 50, 50);
$red-dark: rgb(200, 40, 40);
$orange: rgb(250, 190, 10);
$orange-dark: rgb(200, 152, 8);
$green: rgb(100, 200, 60);
$green-dark: rgb(80, 160, 48);
$blue: rgb(20, 160, 230);
$blue-dark: rgb(16, 128, 184);

$lightgray-light: rgb(230, 230, 230);
$lightgray: rgb(200, 200, 200);
$lightgray-dark: rgb(100, 100, 100);
$gray: rgb(130, 130, 130);
$gray-dark: rgb(65, 65, 65);

$black: rgb(20, 20, 20);
$white: rgb(255, 255, 255);

@import url("https://fonts.googleapis.com/css?family=Poppins");

* {
    margin: 0px;
    padding: 0px;

    box-sizing: border-box;

    font-family: "Poppins", sans-serif;
    font-weight: 400;
    line-height: 1.75;

    font-size: 100%;
}

body {
    padding: 0.8rem;
}

hr {
    margin: 0.512rem 0px;
    border: 1px solid $lightgray;
    background-color: $lightgray;
}

h1,
h2,
h3,
h4,
h5 {
    margin: 3rem 0 1.38rem;

    font-family: "Poppins", sans-serif;
    font-weight: 400;
    line-height: 1.3;
}

h1 {
    margin-top: 0;
    font-size: 3.052rem;
}

h2 {
    font-size: 2.441rem;
}

h3 {
    font-size: 1.953rem;
}

h4 {
    font-size: 1.563rem;
}

h5 {
    font-size: 1.25rem;
}

p {
    margin-bottom: 0.8rem;
    font-size: 1rem;
}

a {
    text-decoration: none;
    color: $blue;
}

a:hover {
    text-decoration: underline;
    color: $blue-dark;
}

a.btn {
    display: inline-block;

    margin: 0.512rem;
    padding: 0.41rem 0.512rem;

    text-decoration: none;
}

a.btn-no-margin {
    margin: 0rem;
}

blockquote {
    margin: 1rem;
    padding: 0.8rem;

    border-left: 5px solid $gray;
    border-radius: 5px;
}

figcaption,
small {
    margin: 0.64rem;
    font-size: 0.8rem;
}

form {
    padding: 0.8rem;
    font-size: 1rem;

    img {
        width: 100%;
    }
}

label {
    width: 100%;
    display: inline-block;
}

input {
    width: 100%;

    margin: 0.512rem 0;
    border: 1px solid $gray;
    border-radius: 5px;
    padding: 0.512rem;
}

textarea:focus,
input:focus,
select:focus {
    outline: none;
    box-shadow: 0 0 0 1px $black;
}

.is-invalid {
    border-color: $red;
    box-shadow: 0 0 0 1px $red;
}

.is-invalid:focus {
    border-color: $red;
    box-shadow: 0 0 0 1px $red;
}

.success-text {
    color: $green;
}

.form-error-text,
.error-text {
    color: $red;
}

.form-success-text {
    color: $green;
}

input[type="file"] {
    display: none;
}

.file-upload {
    display: inline-block;

    width: 100%;

    border: 1px solid $gray;
    border-radius: 5px;
    padding: 0.512rem;

    cursor: pointer;
}

textarea {
    min-width: 100%;
    width: 100%;
    max-width: 100%;

    border: 1px solid $gray;
    border-radius: 5px;

    padding: 0.512rem;
}

select {
    width: 100%;

    margin: 0.512rem 0;
    border: 1px solid $gray;
    border-radius: 5px;
    padding: 0.512rem;
}

.message-window {
    margin: 1rem;
    padding: 1rem;

    max-width: 576px;
    border-radius: 5px;

    background-color: white;

    p {
        text-align: center;
    }
}

.message-window-container {
    position: fixed;
    top: 0px;
    left: 0px;

    z-index: 100;
    width: 100%;
    height: 100%;
    background-color: RGBA(100, 100, 100, 0.5);
}

button a {
    color: inherit;
    text-decoration: none;
}

button a:hover {
    color: inherit;
    text-decoration: none;
}

button:hover {
    cursor: pointer;
}

.btn {
    margin: 0.512rem;
    border-width: 2px;
    border-style: solid;
    border-radius: 5px;
    padding: 0.41rem 0.512rem;
}

.btn-no-margin {
    margin: 0rem;
}

.btn-primary {
    border-color: $blue;
    color: $white;
    background-color: $blue;
}

.btn-primary:hover {
    border-color: $blue-dark;
    color: $white;
    background-color: $blue-dark;
}

.btn-outline-primary {
    border-color: $blue;
    color: $blue;
    background-color: $white;
}

.btn-outline-primary:hover {
    border-color: $blue;
    color: $white;
    background-color: $blue;
}

.btn-secondary {
    border-color: $gray;
    color: $white;
    background-color: $gray;
}

.btn-secondary:hover {
    border-color: $gray-dark;
    color: $white;
    background-color: $gray-dark;
}

.btn-outline-secondary {
    border-color: $gray;
    color: $gray;
    background-color: $white;
}

.btn-outline-secondary:hover {
    border-color: $gray;
    color: $white;
    background-color: $gray;
}

.btn-danger {
    border-color: $red;
    color: $white;
    background-color: $red;
}

.btn-danger:hover {
    border-color: $red-dark;
    color: $white;
    background-color: $red-dark;
}

.btn-outline-danger {
    border-color: $red;
    color: $red;
    background-color: $white;
}

.btn-outline-danger:hover {
    border-color: $red;
    color: $white;
    background-color: $red;
}

.btn-warning {
    border-color: $orange;
    color: $white;
    background-color: $orange;
}

.btn-warning:hover {
    border-color: $orange-dark;
    color: $white;
    background-color: $orange-dark;
}

.btn-outline-warning {
    border-color: $orange;
    color: $orange;
    background-color: $white;
}

.btn-outline-warning:hover {
    border-color: $orange;
    color: $white;
    background-color: $orange;
}

.btn-success {
    border-color: $green;
    color: $white;
    background-color: $green;
}

.btn-success:hover {
    border-color: $green-dark;
    color: $white;
    background-color: $green-dark;
}

.btn-outline-success {
    border-color: $green;
    color: $green;
    background-color: $white;
}

.btn-outline-success:hover {
    border-color: $green;
    color: $white;
    background-color: $green;
}

.btn-disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

th,
th,
td {
    padding: 0.512rem 0.512rem;
}

table {
    width: 100%;
    border-collapse: collapse;

    padding: 0px;
    margin: 0px;
    border: none;

    thead {
        tr {
            border: none;

            th {
                font-weight: 800;
                text-align: left;
            }
        }
    }

    tbody {
        tr {
            white-space: nowrap;
        }
        
        tr:nth-child(even) {
            background: $white;
        }

        tr:nth-child(odd) {
            background: $lightgray-light;
        }
    }
}

.container-small {
    margin: 0 auto;
    width: 100%;
    max-width: 576px;
}

// Flex container

.flex-container {
    display: flex;
}

// Sets the flex direction

.flex-direction-row {
    flex-direction: row;
}

.flex-direction-row-reverse {
    flex-direction: row-reverse;
}

.flex-direction-column {
    flex-direction: column;
}

.flex-direction-column-reverse {
    flex-direction: column-reverse;
}

// Sets the flex wrap

.flex-wrap-nowrap {
    flex-wrap: nowrap;
}

.flex-wrap-wrap {
    flex-wrap: wrap;
}

.flex-wrap-wrap-reverse {
    flex-wrap: wrap-reverse;
}

// This defines the alignment along the main axis.

.justify-content-flex-start {
    justify-content: flex-start;
}

.justify-content-flex-end {
    justify-content: flex-end;
}

.justify-content-start {
    justify-content: start;
}

.justify-content-end {
    justify-content: end;
}

.justify-content-left {
    justify-content: left;
}
.justify-content-right {
    justify-content: right;
}

.justify-content-center {
    justify-content: center;
}

.justify-content-space-between {
    justify-content: space-between;
}

.justify-content-space-around {
    justify-content: space-around;
}

.justify-content-space-evenly {
    justify-content: space-evenly;
}

// This defines the alignment along the cross axis.

.align-items-stretch {
    align-items: stretch;
}

.align-items-flex-start {
    align-items: flex-start;
}
+ .align-items-start {
    align-items: start;
}

.align-items-self-start {
    align-items: self-start;
}

.align-items-flex-end {
    align-items: flex-end;
}

.align-items-end {
    align-items: end;
}

.align-items-self-end {
    align-items: self-end;
}

.align-items-center {
    align-items: center;
}

.align-items-baseline {
    align-items: baseline;
}

// This aligns a flex containerâ€™s lines within when there is extra space in the cross-axis
.align-content-normal {
    align-content: normal;
}

.align-content-flex-start {
    align-content: flex-start;
}

.align-content-start {
    align-content: start;
}

.align-content-flex-end {
    align-content: flex-end;
}

.align-content-end {
    align-content: end;
}

.align-content-center {
    align-content: center;
}

.align-content-space-between {
    align-content: space-between;
}

.align-content-space-around {
    align-content: space-around;
}

.align-content-space-evenly {
    align-content: space-evenly;
}

.align-content-stretch {
    align-content: stretch;
}

// Flex item

.align-self-auto {
    align-self: auto;
}

.align-self-flex-start {
    align-self: flex-start;
}

.align-self-flex-end {
    align-self: flex-end;
}

.align-self-center {
    align-self: center;
}

.align-self-baseline {
    align-self: baseline;
}

.align-self-stretch {
    align-self: stretch;
}

.custom-flex-center-items {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
}
